/*!
 * jQuery Double Tap Plugin.
 * 
 * Copyright (c) 2010 Raul Sanchez (http://www.sanraul.com)
 * 
 * Dual licensed under the MIT and GPL licenses:
 * http://www.opensource.org/licenses/mit-license.php
 * http://www.gnu.org/licenses/gpl.html
 */

(function($){

    var hasTouch = /android|iphone|ipad/i.test(navigator.userAgent.toLowerCase()),
        eventName = hasTouch ? 'touchend' : 'click';

     /**
     * Bind an event handler to the "double tap" JavaScript event.
     * @param {function} doubleTapHandler
     * @param {number} [delay=300]
     */
    $.fn.doubletap = function(doubleTapHandler, delay){
        delay = (delay == null) ? 300 : delay;

        this.bind('touchstart', function(event){
            $(this).data('touchStarted', new Date().getTime());
        });

        this.bind(eventName, function(event){
            var now = new Date().getTime();

            // VK: sometimes both touchstart and touchend are fired twice resulting in false doubletap events;
            //     fixing this by only taking into account touchends that come immediately after touchestarts
            var touchStarted = hasTouch && $(this).data('touchStarted');
            if (!hasTouch || (touchStarted && (now - touchStarted < delay)))
            {
                $(this).data('touchStarted', null);

                // the first time this will make delta a negative number
                var lastTouch = $(this).data('lastTouch') || now + 1;
                var delta = now - lastTouch;
                if(delta < delay && 0 < delta){
                    // After we detct a doubletap, start over
                    $(this).data('lastTouch', null);

                    if(doubleTapHandler !== null && typeof doubleTapHandler === 'function'){
                        doubleTapHandler(event);
                    }
                }else{
                    $(this).data('lastTouch', now);
                }
            }
        });
    };

})(jQuery);